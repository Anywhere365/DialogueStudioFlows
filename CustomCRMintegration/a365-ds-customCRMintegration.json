[
    {
        "id": "5b7a20d82a334114",
        "type": "tab",
        "label": "Custom CMR integration POST hunt event",
        "disabled": false,
        "info": "This flow demonstrates a sample integration with a custom CRM. It listens for specific events, processes the data, and sends it to an external HTTP endpoint."
    },
    {
        "id": "e105c09f28cb9564",
        "type": "any-red-event-bus",
        "z": "5b7a20d82a334114",
        "name": "Listen for DialogueHuntStartedEvent",
        "config": "",
        "filtertype": "DialogueHuntStartedEvent",
        "x": 340,
        "y": 220,
        "wires": [
            [
                "4760329f00414bc0"
            ]
        ]
    },
    {
        "id": "b51bb14dc16e2697",
        "type": "any-red-event-bus",
        "z": "5b7a20d82a334114",
        "name": "Listen for DialogueParticipantAddedEvent",
        "config": "",
        "filtertype": "DialogueParticipantAddedEvent",
        "x": 360,
        "y": 160,
        "wires": [
            [
                "234c6751ea73d389"
            ]
        ]
    },
    {
        "id": "4760329f00414bc0",
        "type": "function",
        "z": "5b7a20d82a334114",
        "name": "Extract Agent Information",
        "func": "// Extract the agent's SIP URI and dialogue ID\nlet targetAgent = msg.payload.event.agentSipUris[0].slice(4);\nlet dialogueId = msg.payload.event.dialogueId;\n\n// Store the agent information in the flow context\nflow.set(`${dialogueId}_agent`, targetAgent);\nmsg.dialogueId = dialogueId;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 220,
        "wires": [
            [
                "16c37f26c63ffcef"
            ]
        ]
    },
    {
        "id": "16c37f26c63ffcef",
        "type": "function",
        "z": "5b7a20d82a334114",
        "name": "Create JSON Payload",
        "func": "// Retrieve stored agent and caller information\nlet dialogueId = msg.dialogueId;\nlet agent = flow.get(`${dialogueId}_agent`);\nlet caller = flow.get(`${dialogueId}_caller`);\n\n// Construct the payload\nmsg.body = {\n    agent: agent,\n    caller: caller\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 220,
        "wires": [
            [
                "6fdfa3285bb4a932"
            ]
        ]
    },
    {
        "id": "6fdfa3285bb4a932",
        "type": "function",
        "z": "5b7a20d82a334114",
        "name": "Prepare HTTP Request",
        "func": "// Set HTTP request details\nmsg.headers = {\n    'content-type': 'application/json',\n    'SUBSCRIPTION_KEY': 'SOME_KEY',\n    'API_KEY': 'SOME_KEY'\n};\nmsg.method = 'POST';\nmsg.url = 'CUST-URL';\nmsg.payload = msg.body;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 220,
        "wires": [
            [
                "d58e597649db36f4"
            ]
        ]
    },
    {
        "id": "d58e597649db36f4",
        "type": "http request",
        "z": "5b7a20d82a334114",
        "name": "Send HTTP Request",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1410,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "234c6751ea73d389",
        "type": "function",
        "z": "5b7a20d82a334114",
        "name": "Extract Caller Information",
        "func": "// Extract the caller's telephone number and dialogue ID\nlet callerTel = msg.payload.event.displayName.slice(4);\nlet dialogueId = msg.payload.event.dialogueId;\n\n// Store the caller information in the flow context\nflow.set(`${dialogueId}_caller`, callerTel);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 160,
        "wires": [
            []
        ]
    }
]