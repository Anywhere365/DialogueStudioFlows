[
    {
        "id": "f0f0f0f0.000001",
        "type": "tab",
        "label": "Voice forward to coworker (improved)",
        "disabled": false,
        "info": ""
    },
    {
        "id": "note_intro",
        "type": "comment",
        "z": "f0f0f0f0.000001",
        "name": "What this flow does",
        "info": "Greets caller → listens for a coworker name (Linda/Kevin/Tom) → speaks confirmation → enqueues to corresponding Skill.\nTimeout is 30s unless caller responds; timeout is cancelled immediately on match or cancel.\nIf the name isn't recognized after 2 tries, call is escalated to ReceptionSkill.",
        "x": 350,
        "y": 120,
        "wires": []
    },
    {
        "id": "incall",
        "type": "any-red-incoming-call",
        "z": "f0f0f0f0.000001",
        "name": "",
        "config": "",
        "filtertype": "audiovideo",
        "x": 280,
        "y": 180,
        "wires": [
            [
                "greet",
                "asr",
                "note_incoming"
            ]
        ]
    },
    {
        "id": "note_incoming",
        "type": "comment",
        "z": "f0f0f0f0.000001",
        "name": "Incoming call → greet + start timeout + start ASR",
        "info": "",
        "x": 670,
        "y": 120,
        "wires": []
    },
    {
        "id": "greet",
        "type": "any-red-say",
        "z": "f0f0f0f0.000001",
        "name": "Say: greeting",
        "text": "Hi! Who would you like to speak to: Linda, Kevin, or Tom? You can also say cancel to hang up.",
        "dataType": "str",
        "saymethod": "Default",
        "voice": "",
        "x": 580,
        "y": 180,
        "wires": [
            [
                "timeout30"
            ]
        ]
    },
    {
        "id": "timeout30",
        "type": "delay",
        "z": "f0f0f0f0.000001",
        "name": "Timeout 30s (cancel on msg.reset)",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 900,
        "y": 180,
        "wires": [
            [
                "say_timeout"
            ]
        ]
    },
    {
        "id": "say_timeout",
        "type": "any-red-say",
        "z": "f0f0f0f0.000001",
        "name": "Say: timeout",
        "text": "Sorry, that took too long. Goodbye.",
        "dataType": "str",
        "saymethod": "Default",
        "voice": "",
        "x": 1220,
        "y": 180,
        "wires": [
            [
                "act_disconnect"
            ]
        ]
    },
    {
        "id": "act_disconnect",
        "type": "any-red-action",
        "z": "f0f0f0f0.000001",
        "name": "Disconnect",
        "sweetName": "Disconnect",
        "actionType": "disconnect",
        "fromSessionId": "session.id",
        "fromDataType": "msg",
        "toSessionId": "fromSessionId",
        "toDataType": "msg",
        "skill": "",
        "skillDataType": "str",
        "x": 1440,
        "y": 180,
        "wires": []
    },
    {
        "id": "asr",
        "type": "any-red-transcriptor",
        "z": "f0f0f0f0.000001",
        "name": "Transcribe (final results)",
        "enable": true,
        "culture": "en-US",
        "final": true,
        "x": 570,
        "y": 280,
        "wires": [
            [],
            [
                "dbg_transcript",
                "route_by_name"
            ]
        ]
    },
    {
        "id": "dbg_transcript",
        "type": "debug",
        "z": "f0f0f0f0.000001",
        "name": "transcript",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.transcriptor.transcript",
        "targetType": "msg",
        "x": 840,
        "y": 280,
        "wires": []
    },
    {
        "id": "route_by_name",
        "type": "function",
        "z": "f0f0f0f0.000001",
        "name": "Route by coworker name / cancel / fallback",
        "func": "// Read transcript\nconst raw = (msg.payload && msg.payload.transcriptor && msg.payload.transcriptor.transcript) || \"\";\nconst s = raw.toString();\nconst lower = s.toLowerCase();\n\n// Check for cancel/stop intent\nconst cancelPhrases = [\n  'cancel','stop','hang up','goodbye','bye','disconnect','end call'\n];\nconst cancelHit = cancelPhrases.some(p => new RegExp('\\\\b' + p.replace(/\\s+/g,'\\\\s+') + '\\\\b','i').test(s));\nif (cancelHit) {\n  msg.reason = 'caller_cancelled';\n  msg.reset = true; // cancel timeout\n  return [null, msg, null]; // → cancel output\n}\n\n// Known coworkers (aliases allow for small variations)\nconst contacts = [\n  { key: 'Linda', skill: 'LindaSkill', aliases: ['linda','lynda'] },\n  { key: 'Kevin', skill: 'KevinSkill', aliases: ['kevin'] },\n  { key: 'Tom',   skill: 'TomSkill',   aliases: ['tom','thom','tommy'] }\n];\n\nlet match = null;\nfor (const c of contacts) {\n  for (const a of c.aliases) {\n    const re = new RegExp('\\\\b' + a + '\\\\b','i');\n    if (re.test(lower)) { match = c; break; }\n  }\n  if (match) break;\n}\n\nconst sessionId = (msg.session && msg.session.id) || 'default';\nconst key = `vf_attempts:${sessionId}`;\nlet attempts = flow.get(key) || 0;\n\nif (match) {\n  // Success → cancel timeout, reset attempts, set dynamic fields\n  flow.set(key, 0);\n  msg.person = match.key;\n  msg.skill = match.skill;\n  msg.speech = `Connecting you to ${match.key}.`;\n  msg.reset = true; // cancel timeout\n  return [msg, null, null]; // → matched output\n}\n\n// No match → increment attempts and reprompt or escalate\nattempts += 1;\nflow.set(key, attempts);\n\nif (attempts < 3) {\n  msg.reprompt = 'Sorry, I did not catch that. Please say Linda, Kevin, or Tom.';\n  return [null, null, msg]; // → fallback output (reprompt)\n} else {\n  // Escalate after 2 failed reprompts\n  msg.person = 'Reception';\n  msg.skill = 'ReceptionSkill';\n  msg.speech = 'I will connect you to Reception for further assistance.';\n  msg.reset = true; // cancel timeout\n  return [msg, null, null]; // → matched path with Reception\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 340,
        "wires": [
            [
                "say_connect",
                "timeout30"
            ],
            [
                "say_bye",
                "timeout30"
            ],
            [
                "say_reprompt"
            ]
        ]
    },
    {
        "id": "say_connect",
        "type": "any-red-say",
        "z": "f0f0f0f0.000001",
        "name": "Say: connecting …",
        "text": "speech",
        "dataType": "msg",
        "saymethod": "Default",
        "voice": "",
        "x": 1220,
        "y": 320,
        "wires": [
            [
                "act_enqueue_dynamic"
            ]
        ]
    },
    {
        "id": "act_enqueue_dynamic",
        "type": "any-red-action",
        "z": "f0f0f0f0.000001",
        "name": "Enqueue to Skill (dynamic)",
        "sweetName": "Enqueue",
        "actionType": "enqueue",
        "fromSessionId": "session.id",
        "fromDataType": "msg",
        "toSessionId": "fromSessionId",
        "toDataType": "msg",
        "skill": "skill",
        "skillDataType": "msg",
        "x": 1490,
        "y": 320,
        "wires": []
    },
    {
        "id": "say_bye",
        "type": "any-red-say",
        "z": "f0f0f0f0.000001",
        "name": "Say: goodbye",
        "text": "Okay, goodbye.",
        "dataType": "str",
        "saymethod": "Default",
        "voice": "",
        "x": 1210,
        "y": 360,
        "wires": [
            [
                "act_disconnect"
            ]
        ]
    },
    {
        "id": "say_reprompt",
        "type": "any-red-say",
        "z": "f0f0f0f0.000001",
        "name": "Say: reprompt",
        "text": "reprompt",
        "dataType": "msg",
        "saymethod": "Default",
        "voice": "",
        "x": 1210,
        "y": 400,
        "wires": [
            []
        ]
    }
]